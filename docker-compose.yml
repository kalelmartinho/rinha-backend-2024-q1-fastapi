version: '3.8'

services:
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - sockets:/fastapi/tmp/sockets
    depends_on:
      - api01
#     - api02
    ports:
      - "9999:9999"
#   deploy:
#     resources:
#      limits:
#         cpus: "0.15"
#         memory: "80MB"
          

  api01: &api
    image: kalelmartinho/rinha-2024q1-fastapi:latest

    depends_on:
      - db
    environment:
      DB_URL: postgresql+asyncpg://postgres:postgres@db:5432/postgres
    volumes:
      - sockets:/fastapi/tmp/sockets
    command: ["poetry", "run", "gunicorn", "rinha_backend_2024_q1_fastapi.main:app", "-k", "uvicorn.workers.UvicornWorker", "-b", "unix:/fastapi/tmp/sockets/api01.sock", "-w", "2", "--log-level", "debug"]
#   deploy:
#      resources:
#        limits:
#           cpus: "0.8"
#           memory: "160MB"

# api02:
#   <<: *api
#   hostname: api02
#   command: ["poetry", "run", "uvicorn", "rinha_backend_2024_q1_fastapi.main:app", "--uds", "/fastapi/tmp/sockets/api02.sock"]

  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./migration.sql:/docker-entrypoint-initdb.d/migration.sql
#   command: ["-c", "max_connections=1000", "-c", "shared_buffers=128MB", "-c", "synchronous_commit=off", "-c", "fsync=off", "-c", "full_page_writes=off"]
#   deploy:
#     resources:
#        limits:
#          cpus: "0.6"
#          memory: "200MB"



    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres-d postgres" ]
      interval: 3s
      timeout: 1s
      retries: 5

volumes:
  sockets:
        
